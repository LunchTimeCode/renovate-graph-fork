{"version":3,"file":"workarounds.js","sourceRoot":"","sources":["../../../../lib/config/presets/internal/workarounds.ts"],"names":[],"mappings":";;;AAEA,+EAA+E;AAElE,QAAA,OAAO,GAA2B;IAC7C,GAAG,EAAE;QACH,WAAW,EAAE;YACX,mEAAmE;SACpE;QACD,OAAO,EAAE;YACP,wCAAwC;YACxC,sCAAsC;YACtC,oDAAoD;YACpD,0CAA0C;YAC1C,iCAAiC;YACjC,kCAAkC;YAClC,sCAAsC;YACtC,gDAAgD;YAChD,uCAAuC;YACvC,6BAA6B;YAC7B,4CAA4C;YAC5C,oCAAoC;YACpC,2BAA2B;YAC3B,0CAA0C;SAC3C;QACD,UAAU,EAAE,EAAE,EAAE,4CAA4C;KAC7D;IACD,4BAA4B,EAAE;QAC5B,WAAW,EAAE,gDAAgD;QAC7D,YAAY,EAAE;YACZ;gBACE,iBAAiB,EACf,4HAA4H;gBAC9H,gBAAgB,EAAE,CAAC,QAAQ,CAAC;gBAC5B,oBAAoB,EAAE;oBACpB,UAAU;oBACV,oBAAoB;oBACpB,4BAA4B;iBAC7B;gBACD,UAAU,EACR,qIAAqI;aACxI;SACF;KACF;IACD,aAAa,EAAE;QACb,WAAW,EAAE,mCAAmC;QAChD,YAAY,EAAE;YACZ;gBACE,WAAW,EACT,gEAAgE;gBAClE,gBAAgB,EAAE,CAAC,QAAQ,CAAC;gBAC5B,oBAAoB,EAAE;oBACpB,6DAA6D;iBAC9D;gBACD,UAAU,EAAE,MAAM;aACnB;SACF;KACF;IACD,8BAA8B,EAAE;QAC9B,WAAW,EAAE,4DAA4D;QACzE,YAAY,EAAE;YACZ;gBACE,OAAO,EAAE,KAAK;gBACd,gBAAgB,EAAE,CAAC,OAAO,CAAC;gBAC3B,iBAAiB,EAAE,CAAC,mCAAmC,CAAC;aACzD;SACF;KACF;IACD,sBAAsB,EAAE;QACtB,WAAW,EACT,qEAAqE;QACvE,YAAY,EAAE;YACZ;gBACE,OAAO,EAAE,KAAK;gBACd,aAAa,EAAE,CAAC,aAAa,CAAC;gBAC9B,aAAa,EAAE,CAAC,OAAO,CAAC;aACzB;SACF;KACF;IACD,kCAAkC,EAAE;QAClC,WAAW,EAAE,4CAA4C;QACzD,YAAY,EAAE;YACZ;gBACE,eAAe,EAAE,WAAW;gBAC5B,mBAAmB,EAAE,aAAa;gBAClC,gBAAgB,EAAE,CAAC,QAAQ,CAAC;gBAC5B,aAAa,EAAE,CAAC,QAAQ,CAAC;aAC1B;YACD;gBACE,eAAe,EAAE,WAAW;gBAC5B,mBAAmB,EAAE,aAAa;gBAClC,gBAAgB,EAAE,CAAC,QAAQ,CAAC;gBAC5B,iBAAiB,EAAE,CAAC,QAAQ,CAAC;aAC9B;SACF;KACF;IACD,4BAA4B,EAAE;QAC5B,WAAW,EAAE,gDAAgD;QAC7D,YAAY,EAAE;YACZ;gBACE,eAAe,EAAE,gCAAgC;gBACjD,aAAa,EAAE,CAAC,KAAK,CAAC;gBACtB,oBAAoB,EAAE,CAAC,aAAa,CAAC;aACtC;SACF;KACF;IACD,wBAAwB,EAAE;QACxB,WAAW,EAAE,qCAAqC;QAClD,YAAY,EAAE;YACZ;gBACE,eAAe,EAAE,UAAU;gBAC3B,gBAAgB,EAAE,CAAC,OAAO,CAAC;gBAC3B,iBAAiB,EAAE;oBACjB,uDAAuD;iBACxD;aACF;SACF;KACF;IACD,sCAAsC,EAAE;QACtC,WAAW,EAAE,iCAAiC;QAC9C,YAAY,EAAE;YACZ;gBACE,eAAe,EAAE,eAAe;gBAChC,gBAAgB,EAAE,CAAC,OAAO,CAAC;gBAC3B,iBAAiB,EAAE,CAAC,gBAAgB,CAAC;aACtC;SACF;KACF;IACD,eAAe,EAAE;QACf,WAAW,EAAE,8CAA8C;QAC3D,YAAY,EAAE;YACZ;gBACE,eAAe,EAAE,8BAA8B;gBAC/C,WAAW,EACT,4IAA4I;gBAC9I,gBAAgB,EAAE,CAAC,QAAQ,EAAE,cAAc,CAAC;gBAC5C,iBAAiB,EAAE;oBACjB,iBAAiB;oBACjB,gBAAgB;oBAChB,cAAc;oBACd,SAAS;oBACT,MAAM;oBACN,UAAU;oBACV,YAAY;iBACb;gBACD,oBAAoB,EAAE;oBACpB,oBAAoB;oBACpB,kCAAkC;oBAClC,eAAe;iBAChB;gBACD,UAAU,EACR,6HAA6H;aAChI;YACD;gBACE,eAAe,EAAE,8BAA8B;gBAC/C,WAAW,EACT,4IAA4I;gBAC9I,gBAAgB,EAAE,CAAC,QAAQ,EAAE,cAAc,CAAC;gBAC5C,aAAa,EAAE;oBACb,iBAAiB;oBACjB,gBAAgB;oBAChB,cAAc;oBACd,SAAS;oBACT,MAAM;oBACN,UAAU;oBACV,YAAY;iBACb;gBACD,UAAU,EACR,6HAA6H;aAChI;SACF;KACF;IACD,0BAA0B,EAAE;QAC1B,WAAW,EAAE,yDAAyD;QACtE,YAAY,EAAE;YACZ;gBACE,eAAe,EAAE,yBAAyB;gBAC1C,gBAAgB,EAAE,CAAC,OAAO,EAAE,aAAa,CAAC;gBAC1C,oBAAoB,EAAE,CAAC,UAAU,CAAC;aACnC;SACF;KACF;IACD,oBAAoB,EAAE;QACpB,WAAW,EAAE,+CAA+C;QAC5D,YAAY,EAAE;YACZ;gBACE,gBAAgB,EAAE,CAAC,QAAQ,CAAC;gBAC5B,aAAa,EAAE,CAAC,MAAM,CAAC;gBACvB,oBAAoB,EAAE,2CAA2C;gBACjE,UAAU,EAAE,MAAM;aACnB;SACF;KACF;IACD,wBAAwB,EAAE;QACxB,WAAW,EACT,uGAAuG;QACzG,SAAS,EAAE;YACT;gBACE,sBAAsB,EAAE,CAAC;gBACzB,SAAS,EAAE,cAAc;gBACzB,oBAAoB,EAAE,GAAG;aAC1B;SACF;KACF;IACD,yBAAyB,EAAE;QACzB,WAAW,EACT,kEAAkE;QACpE,YAAY,EAAE;YACZ;gBACE,gBAAgB,EAAE,CAAC,QAAQ,CAAC;gBAC5B,iBAAiB,EAAE;oBACjB,iCAAiC;oBACjC,wCAAwC;oBACxC,sCAAsC;oBACtC,yCAAyC;iBAC1C;gBACD,oBAAoB,EAAE;oBACpB,oCAAoC;oBACpC,mCAAmC;oBACnC,kCAAkC;oBAClC,mCAAmC;oBACnC,mCAAmC;oBACnC,mCAAmC;oBACnC,iCAAiC;oBACjC,iCAAiC;oBACjC,iCAAiC;oBACjC,SAAS;iBACV;gBACD,UAAU,EAAE,QAAQ;aACrB;SACF;KACF;IACD,mBAAmB,EAAE;QACnB,WAAW,EAAE,wCAAwC;QACrD,YAAY,EAAE;YACZ;gBACE,aAAa,EAAE,CAAC,KAAK,CAAC;gBACtB,iBAAiB,EAAE,CAAC,aAAa,CAAC;gBAClC,UAAU,EAAE,MAAM;aACnB;SACF;KACF;CACF,CAAC","sourcesContent":["import type { Preset } from '../types';\n\n/* eslint sort-keys: [\"error\", \"asc\", {caseSensitive: false, natural: true}] */\n\nexport const presets: Record<string, Preset> = {\n  all: {\n    description: [\n      'Apply crowd-sourced workarounds for known problems with packages.',\n    ],\n    extends: [\n      'workarounds:mavenCommonsAncientVersion',\n      'workarounds:ignoreSpringCloudNumeric',\n      'workarounds:ignoreWeb3jCoreWithOldReleaseTimestamp',\n      'workarounds:ignoreHttp4sDigestMilestones',\n      'workarounds:typesNodeVersioning',\n      'workarounds:nodeDockerVersioning',\n      'workarounds:reduceRepologyServerLoad',\n      'workarounds:doNotUpgradeFromAlpineStableToEdge',\n      'workarounds:supportRedHatImageVersion',\n      'workarounds:javaLTSVersions',\n      'workarounds:disableEclipseLifecycleMapping',\n      'workarounds:disableMavenParentRoot',\n      'workarounds:containerbase',\n      'workarounds:bitnamiDockerImageVersioning',\n    ],\n    ignoreDeps: [], // Hack to improve onboarding PR description\n  },\n  bitnamiDockerImageVersioning: {\n    description: 'Use custom regex versioning for bitnami images',\n    packageRules: [\n      {\n        matchCurrentValue:\n          '/^(?<major>\\\\d+)(?:\\\\.(?<minor>\\\\d+)(?:\\\\.(?<patch>\\\\d+))?)?-(?<compatibility>.+)-(?<build>\\\\d+)(?:-r(?<revision>\\\\d+))?$/',\n        matchDatasources: ['docker'],\n        matchPackagePrefixes: [\n          'bitnami/',\n          'docker.io/bitnami/',\n          'gcr.io/bitnami-containers/',\n        ],\n        versioning:\n          'regex:^(?<major>\\\\d+)(?:\\\\.(?<minor>\\\\d+)(?:\\\\.(?<patch>\\\\d+))?)?(:?-(?<compatibility>.+)-(?<build>\\\\d+)(?:-r(?<revision>\\\\d+))?)?$',\n      },\n    ],\n  },\n  containerbase: {\n    description: 'Add some containerbase overrides.',\n    packageRules: [\n      {\n        description:\n          'Use node versioning for `(containerbase|renovate)/node` images',\n        matchDatasources: ['docker'],\n        matchPackagePatterns: [\n          '^(?:(?:docker|ghcr)\\\\.io/)?(?:containerbase|renovate)/node$',\n        ],\n        versioning: 'node',\n      },\n    ],\n  },\n  disableEclipseLifecycleMapping: {\n    description: 'Disable Eclipse m2e lifecycle-mapping placeholder package.',\n    packageRules: [\n      {\n        enabled: false,\n        matchDatasources: ['maven'],\n        matchPackageNames: ['org.eclipse.m2e:lifecycle-mapping'],\n      },\n    ],\n  },\n  disableMavenParentRoot: {\n    description:\n      'Avoid version fetching for Maven packages detected as project root.',\n    packageRules: [\n      {\n        enabled: false,\n        matchDepTypes: ['parent-root'],\n        matchManagers: ['maven'],\n      },\n    ],\n  },\n  doNotUpgradeFromAlpineStableToEdge: {\n    description: 'Do not upgrade from Alpine stable to edge.',\n    packageRules: [\n      {\n        allowedVersions: '<20000000',\n        matchCurrentVersion: '!/^\\\\d{8}$/',\n        matchDatasources: ['docker'],\n        matchDepNames: ['alpine'],\n      },\n      {\n        allowedVersions: '<20000000',\n        matchCurrentVersion: '!/^\\\\d{8}$/',\n        matchDatasources: ['docker'],\n        matchPackageNames: ['alpine'],\n      },\n    ],\n  },\n  ignoreHttp4sDigestMilestones: {\n    description: 'Ignore `http4s` digest-based `1.x` milestones.',\n    packageRules: [\n      {\n        allowedVersions: `!/^1\\\\.0-\\\\d+-[a-fA-F0-9]{7}$/`,\n        matchManagers: ['sbt'],\n        matchPackagePrefixes: ['org.http4s:'],\n      },\n    ],\n  },\n  ignoreSpringCloudNumeric: {\n    description: 'Ignore spring cloud `1.x` releases.',\n    packageRules: [\n      {\n        allowedVersions: '/^[A-Z]/',\n        matchDatasources: ['maven'],\n        matchPackageNames: [\n          'org.springframework.cloud:spring-cloud-starter-parent',\n        ],\n      },\n    ],\n  },\n  ignoreWeb3jCoreWithOldReleaseTimestamp: {\n    description: 'Ignore `web3j` `5.0.0` release.',\n    packageRules: [\n      {\n        allowedVersions: '!/^5\\\\.0\\\\.0/',\n        matchDatasources: ['maven'],\n        matchPackageNames: ['org.web3j:core'],\n      },\n    ],\n  },\n  javaLTSVersions: {\n    description: 'Limit Java runtime versions to LTS releases.',\n    packageRules: [\n      {\n        allowedVersions: '/^(?:8|11|17|21)(?:\\\\.|-|$)/',\n        description:\n          'Limit Java runtime versions to LTS releases. To receive all major releases add `workarounds:javaLTSVersions` to the `ignorePresets` array.',\n        matchDatasources: ['docker', 'java-version'],\n        matchPackageNames: [\n          'eclipse-temurin',\n          'amazoncorretto',\n          'adoptopenjdk',\n          'openjdk',\n          'java',\n          'java-jre',\n          'sapmachine',\n        ],\n        matchPackagePatterns: [\n          '^azul/zulu-openjdk',\n          '^bellsoft/liberica-openj(dk|re)-',\n          '^cimg/openjdk',\n        ],\n        versioning:\n          'regex:^(?<major>\\\\d+)?(\\\\.(?<minor>\\\\d+))?(\\\\.(?<patch>\\\\d+))?([\\\\._+](?<build>(\\\\d\\\\.?)+)(LTS)?)?(-(?<compatibility>.*))?$',\n      },\n      {\n        allowedVersions: '/^(?:8|11|17|21)(?:\\\\.|-|$)/',\n        description:\n          'Limit Java runtime versions to LTS releases. To receive all major releases add `workarounds:javaLTSVersions` to the `ignorePresets` array.',\n        matchDatasources: ['docker', 'java-version'],\n        matchDepNames: [\n          'eclipse-temurin',\n          'amazoncorretto',\n          'adoptopenjdk',\n          'openjdk',\n          'java',\n          'java-jre',\n          'sapmachine',\n        ],\n        versioning:\n          'regex:^(?<major>\\\\d+)?(\\\\.(?<minor>\\\\d+))?(\\\\.(?<patch>\\\\d+))?([\\\\._+](?<build>(\\\\d\\\\.?)+)(LTS)?)?(-(?<compatibility>.*))?$',\n      },\n    ],\n  },\n  mavenCommonsAncientVersion: {\n    description: 'Fix some problems with very old Maven commons versions.',\n    packageRules: [\n      {\n        allowedVersions: '!/^200\\\\d{5}(\\\\.\\\\d+)?/',\n        matchDatasources: ['maven', 'sbt-package'],\n        matchPackagePrefixes: ['commons-'],\n      },\n    ],\n  },\n  nodeDockerVersioning: {\n    description: 'Use node versioning for `node` docker images.',\n    packageRules: [\n      {\n        matchDatasources: ['docker'],\n        matchDepNames: ['node'],\n        versionCompatibility: '^(?<version>[^-]+)(?<compatibility>-.*)?$',\n        versioning: 'node',\n      },\n    ],\n  },\n  reduceRepologyServerLoad: {\n    description:\n      'Limit requests to reduce load on Repology servers until we can fix this properly, see issue `#10133`.',\n    hostRules: [\n      {\n        concurrentRequestLimit: 1,\n        matchHost: 'repology.org',\n        maxRequestsPerSecond: 0.5,\n      },\n    ],\n  },\n  supportRedHatImageVersion: {\n    description:\n      'Use specific versioning for Red Hat-maintained container images.',\n    packageRules: [\n      {\n        matchDatasources: ['docker'],\n        matchPackageNames: [\n          'registry.access.redhat.com/rhel',\n          'registry.access.redhat.com/rhel-atomic',\n          'registry.access.redhat.com/rhel-init',\n          'registry.access.redhat.com/rhel-minimal',\n        ],\n        matchPackagePrefixes: [\n          'registry.access.redhat.com/rhceph/',\n          'registry.access.redhat.com/rhgs3/',\n          'registry.access.redhat.com/rhel7',\n          'registry.access.redhat.com/rhel8/',\n          'registry.access.redhat.com/rhel9/',\n          'registry.access.redhat.com/rhscl/',\n          'registry.access.redhat.com/ubi7',\n          'registry.access.redhat.com/ubi8',\n          'registry.access.redhat.com/ubi9',\n          'redhat/',\n        ],\n        versioning: 'redhat',\n      },\n    ],\n  },\n  typesNodeVersioning: {\n    description: 'Use node versioning for `@types/node`.',\n    packageRules: [\n      {\n        matchManagers: ['npm'],\n        matchPackageNames: ['@types/node'],\n        versioning: `node`,\n      },\n    ],\n  },\n};\n"]}