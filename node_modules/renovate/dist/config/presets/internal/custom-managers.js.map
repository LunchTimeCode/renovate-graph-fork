{"version":3,"file":"custom-managers.js","sourceRoot":"","sources":["../../../../lib/config/presets/internal/custom-managers.ts"],"names":[],"mappings":";;;AAEA,+EAA+E;AAElE,QAAA,OAAO,GAA2B;IAC7C,aAAa,EAAE;QACb,cAAc,EAAE;YACd;gBACE,UAAU,EAAE,OAAO;gBACnB,kBAAkB,EAAE,KAAK;gBACzB,eAAe,EAAE,gBAAgB;gBACjC,SAAS,EAAE,CAAC,oBAAoB,CAAC;gBACjC,YAAY,EAAE;oBACZ,kEAAkE;iBACnE;aACF;SACF;QACD,WAAW,EACT,+DAA+D;KAClE;IACD,0BAA0B,EAAE;QAC1B,cAAc,EAAE;YACd;gBACE,UAAU,EAAE,OAAO;gBACnB,SAAS,EAAE,CAAC,mCAAmC,CAAC;gBAChD,YAAY,EAAE;oBACZ,mVAAmV;iBACpV;aACF;SACF;QACD,WAAW,EAAE,oDAAoD;KAClE;IACD,kBAAkB,EAAE;QAClB,cAAc,EAAE;YACd;gBACE,UAAU,EAAE,OAAO;gBACnB,SAAS,EAAE;oBACT,wCAAwC;oBACxC,yCAAyC;iBAC1C;gBACD,YAAY,EAAE;oBACZ,sVAAsV;iBACvV;aACF;SACF;QACD,WAAW,EAAE,6CAA6C;KAC3D;IACD,qBAAqB,EAAE;QACrB,cAAc,EAAE;YACd;gBACE,UAAU,EAAE,OAAO;gBACnB,SAAS,EAAE;oBACT,yFAAyF;oBACzF,sBAAsB;iBACvB;gBACD,YAAY,EAAE;oBACZ,qSAAqS;iBACtS;aACF;SACF;QACD,WAAW,EACT,iEAAiE;KACpE;IACD,sBAAsB,EAAE;QACtB,cAAc,EAAE;YACd;gBACE,UAAU,EAAE,OAAO;gBACnB,SAAS,EAAE,CAAC,uBAAuB,CAAC;gBACpC,YAAY,EAAE;oBACZ,oUAAoU;iBACrU;aACF;SACF;QACD,WAAW,EACT,kEAAkE;KACrE;IACD,wBAAwB,EAAE;QACxB,cAAc,EAAE;YACd;gBACE,UAAU,EAAE,OAAO;gBACnB,kBAAkB,EAAE,QAAQ;gBAC5B,SAAS,EAAE,CAAC,oBAAoB,CAAC;gBACjC,YAAY,EAAE;oBACZ,6FAA6F;iBAC9F;aACF;SACF;QACD,WAAW,EAAE,uDAAuD;KACrE;IACD,gBAAgB,EAAE;QAChB,cAAc,EAAE;YACd;gBACE,UAAU,EAAE,OAAO;gBACnB,SAAS,EAAE;oBACT,gBAAgB;oBAChB,gBAAgB;oBAChB,mBAAmB;oBACnB,QAAQ;iBACT;gBACD,YAAY,EAAE;oBACZ,0UAA0U;iBAC3U;aACF;SACF;QACD,WAAW,EAAE,2CAA2C;KACzD;IACD,qBAAqB,EAAE;QACrB,cAAc,EAAE;YACd;gBACE,UAAU,EAAE,OAAO;gBACnB,kBAAkB,EAChB,wDAAwD;gBAC1D,SAAS,EAAE,CAAC,iBAAiB,CAAC;gBAC9B,YAAY,EAAE;oBACZ,sRAAsR;iBACvR;gBACD,kBAAkB,EAAE,2CAA2C;aAChE;SACF;QACD,WAAW,EAAE,mDAAmD;KACjE;IACD,cAAc,EAAE;QACd,cAAc,EAAE;YACd;gBACE,UAAU,EAAE,OAAO;gBACnB,SAAS,EAAE,CAAC,cAAc,CAAC;gBAC3B,YAAY,EAAE;oBACZ,8LAA8L;iBAC/L;gBACD,kBAAkB,EAAE,2CAA2C;aAChE;SACF;QACD,WAAW,EAAE,kDAAkD;KAChE;CACF,CAAC","sourcesContent":["import type { Preset } from '../types';\n\n/* eslint sort-keys: [\"error\", \"asc\", {caseSensitive: false, natural: true}] */\n\nexport const presets: Record<string, Preset> = {\n  biomeVersions: {\n    customManagers: [\n      {\n        customType: 'regex',\n        datasourceTemplate: 'npm',\n        depNameTemplate: '@biomejs/biome',\n        fileMatch: ['(^|/)biome.jsonc?$'],\n        matchStrings: [\n          '\"https://biomejs.dev/schemas/(?<currentValue>[^\"]+)/schema.json\"',\n        ],\n      },\n    ],\n    description:\n      'Update `$schema` version in `biome.json` configuration files.',\n  },\n  bitbucketPipelinesVersions: {\n    customManagers: [\n      {\n        customType: 'regex',\n        fileMatch: ['(^|/)bitbucket-pipelines\\\\.ya?ml$'],\n        matchStrings: [\n          '# renovate: datasource=(?<datasource>[a-z-.]+?) depName=(?<depName>[^\\\\s]+?)(?: (lookupName|packageName)=(?<packageName>[^\\\\s]+?))?(?: versioning=(?<versioning>[^\\\\s]+?))?(?: extractVersion=(?<extractVersion>[^\\\\s]+?))?(?: registryUrl=(?<registryUrl>[^\\\\s]+?))?\\\\s+.*\\\\s+[A-Za-z0-9_]+?_VERSION[ =:]\\\\s?[\"\\']?(?<currentValue>.+?)[\"\\']?\\\\s',\n        ],\n      },\n    ],\n    description: 'Update `_VERSION` variables in Bitbucket Pipelines',\n  },\n  dockerfileVersions: {\n    customManagers: [\n      {\n        customType: 'regex',\n        fileMatch: [\n          '(^|/|\\\\.)([Dd]ocker|[Cc]ontainer)file$',\n          '(^|/)([Dd]ocker|[Cc]ontainer)file[^/]*$',\n        ],\n        matchStrings: [\n          '# renovate: datasource=(?<datasource>[a-z-.]+?) depName=(?<depName>[^\\\\s]+?)(?: (lookupName|packageName)=(?<packageName>[^\\\\s]+?))?(?: versioning=(?<versioning>[^\\\\s]+?))?(?: extractVersion=(?<extractVersion>[^\\\\s]+?))?(?: registryUrl=(?<registryUrl>[^\\\\s]+?))?\\\\s(?:ENV|ARG)\\\\s+[A-Za-z0-9_]+?_VERSION[ =][\"\\']?(?<currentValue>.+?)[\"\\']?\\\\s',\n        ],\n      },\n    ],\n    description: 'Update `_VERSION` variables in Dockerfiles.',\n  },\n  githubActionsVersions: {\n    customManagers: [\n      {\n        customType: 'regex',\n        fileMatch: [\n          '(^|/)(workflow-templates|\\\\.(?:github|gitea|forgejo)/(?:workflows|actions))/.+\\\\.ya?ml$',\n          '(^|/)action\\\\.ya?ml$',\n        ],\n        matchStrings: [\n          '# renovate: datasource=(?<datasource>[a-z-.]+?) depName=(?<depName>[^\\\\s]+?)(?: (?:lookupName|packageName)=(?<packageName>[^\\\\s]+?))?(?: versioning=(?<versioning>[^\\\\s]+?))?(?: extractVersion=(?<extractVersion>[^\\\\s]+?))?\\\\s+[A-Za-z0-9_]+?_VERSION\\\\s*:\\\\s*[\"\\']?(?<currentValue>.+?)[\"\\']?\\\\s',\n        ],\n      },\n    ],\n    description:\n      'Update `_VERSION` environment variables in GitHub Action files.',\n  },\n  gitlabPipelineVersions: {\n    customManagers: [\n      {\n        customType: 'regex',\n        fileMatch: ['\\\\.gitlab-ci\\\\.ya?ml$'],\n        matchStrings: [\n          '# renovate: datasource=(?<datasource>[a-z-.]+?) depName=(?<depName>[^\\\\s]+?)(?: (?:packageName)=(?<packageName>[^\\\\s]+?))?(?: versioning=(?<versioning>[^\\\\s]+?))?(?: extractVersion=(?<extractVersion>[^\\\\s]+?))?(?: registryUrl=(?<registryUrl>[^\\\\s]+?))?\\\\s+[A-Za-z0-9_]+?_VERSION\\\\s*:\\\\s*[\"\\']?(?<currentValue>.+?)[\"\\']?\\\\s',\n        ],\n      },\n    ],\n    description:\n      'Update `_VERSION` environment variables in GitLab pipeline file.',\n  },\n  helmChartYamlAppVersions: {\n    customManagers: [\n      {\n        customType: 'regex',\n        datasourceTemplate: 'docker',\n        fileMatch: ['(^|/)Chart\\\\.yaml$'],\n        matchStrings: [\n          '#\\\\s*renovate: image=(?<depName>.*?)\\\\s+appVersion:\\\\s*[\"\\']?(?<currentValue>[\\\\w+\\\\.\\\\-]*)',\n        ],\n      },\n    ],\n    description: 'Update `appVersion` value in Helm chart `Chart.yaml`.',\n  },\n  makefileVersions: {\n    customManagers: [\n      {\n        customType: 'regex',\n        fileMatch: [\n          '(^|/)Makefile$',\n          '(^|/)makefile$',\n          '(^|/)GNUMakefile$',\n          '\\\\.mk$',\n        ],\n        matchStrings: [\n          '# renovate: datasource=(?<datasource>[a-z-.]+?) depName=(?<depName>[^\\\\s]+?)(?: (?:packageName)=(?<packageName>[^\\\\s]+?))?(?: versioning=(?<versioning>[^\\\\s]+?))?(?: extractVersion=(?<extractVersion>[^\\\\s]+?))?(?: registryUrl=(?<registryUrl>[^\\\\s]+?))?\\\\s+[A-Za-z0-9_]+?_VERSION\\\\s*:*\\\\??=\\\\s*[\"\\']?(?<currentValue>.+?)[\"\\']?\\\\s',\n        ],\n      },\n    ],\n    description: 'Update `_VERSION` variables in Makefiles.',\n  },\n  mavenPropertyVersions: {\n    customManagers: [\n      {\n        customType: 'regex',\n        datasourceTemplate:\n          '{{#if datasource}}{{{datasource}}}{{else}}maven{{/if}}',\n        fileMatch: ['(^|/)pom\\\\.xml$'],\n        matchStrings: [\n          '<!--\\\\s?renovate:( datasource=(?<datasource>[a-z-.]+?))? depName=(?<depName>[^\\\\s]+?)(?: packageName=(?<packageName>[^\\\\s]+?))?(?: versioning=(?<versioning>[^\\\\s]+?))?(?: extractVersion=(?<extractVersion>[^\\\\s]+?))?\\\\s+-->\\\\s+<.+\\\\.version>(?<currentValue>.+)<\\\\/.+\\\\.version>',\n        ],\n        versioningTemplate: '{{#if versioning}}{{{versioning}}}{{/if}}',\n      },\n    ],\n    description: 'Update `*.version` properties in `pom.xml` files.',\n  },\n  tfvarsVersions: {\n    customManagers: [\n      {\n        customType: 'regex',\n        fileMatch: ['.+\\\\.tfvars$'],\n        matchStrings: [\n          '#\\\\s*renovate: datasource=(?<datasource>.*?) depName=(?<depName>.*?)( versioning=(?<versioning>.*?))?(?: extractVersion=(?<extractVersion>.*?))?\\\\s.*?_version\\\\s*=\\\\s*\"(?<currentValue>.*)\"',\n        ],\n        versioningTemplate: '{{#if versioning}}{{{versioning}}}{{/if}}',\n      },\n    ],\n    description: 'Update `*_version` variables in `.tfvars` files.',\n  },\n};\n"]}