import { z } from 'zod';
export declare const CargoLockSchema: z.ZodObject<{
    package: z.ZodOptional<z.ZodArray<z.ZodObject<{
        name: z.ZodString;
        version: z.ZodString;
        source: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        name: string;
        version: string;
        source?: string | undefined;
    }, {
        name: string;
        version: string;
        source?: string | undefined;
    }>, "many">>;
}, "strip", z.ZodTypeAny, {
    package?: {
        name: string;
        version: string;
        source?: string | undefined;
    }[] | undefined;
}, {
    package?: {
        name: string;
        version: string;
        source?: string | undefined;
    }[] | undefined;
}>;
export type CargoLockSchema = z.infer<typeof CargoLockSchema>;
export declare const CargoLockSchemaToml: z.ZodPipeline<z.ZodEffects<z.ZodString, unknown, string>, z.ZodObject<{
    package: z.ZodOptional<z.ZodArray<z.ZodObject<{
        name: z.ZodString;
        version: z.ZodString;
        source: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        name: string;
        version: string;
        source?: string | undefined;
    }, {
        name: string;
        version: string;
        source?: string | undefined;
    }>, "many">>;
}, "strip", z.ZodTypeAny, {
    package?: {
        name: string;
        version: string;
        source?: string | undefined;
    }[] | undefined;
}, {
    package?: {
        name: string;
        version: string;
        source?: string | undefined;
    }[] | undefined;
}>>;
