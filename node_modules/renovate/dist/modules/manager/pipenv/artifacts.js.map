{"version":3,"file":"artifacts.js","sourceRoot":"","sources":["../../../../lib/modules/manager/pipenv/artifacts.ts"],"names":[],"mappings":"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","sourcesContent":["import is from '@sindresorhus/is';\nimport semver from 'semver';\nimport { TEMPORARY_ERROR } from '../../../constants/error-messages';\nimport { logger } from '../../../logger';\nimport type { HostRule } from '../../../types';\nimport { exec } from '../../../util/exec';\nimport type { ExecOptions, ExtraEnv, Opt } from '../../../util/exec/types';\nimport {\n  deleteLocalFile,\n  ensureCacheDir,\n  getSiblingFileName,\n  readLocalFile,\n  writeLocalFile,\n} from '../../../util/fs';\nimport { getRepoStatus } from '../../../util/git';\nimport { find } from '../../../util/host-rules';\nimport { regEx } from '../../../util/regex';\nimport { parse as parseToml } from '../../../util/toml';\nimport { parseUrl } from '../../../util/url';\nimport { PypiDatasource } from '../../datasource/pypi';\nimport pep440 from '../../versioning/pep440';\nimport type {\n  UpdateArtifact,\n  UpdateArtifactsConfig,\n  UpdateArtifactsResult,\n} from '../types';\nimport { extractPackageFile } from './extract';\nimport { PipfileLockSchema } from './schema';\n\nexport async function getPythonConstraint(\n  pipfileName: string,\n  pipfileContent: string,\n  existingLockFileContent: string,\n  config: UpdateArtifactsConfig,\n): Promise<string | undefined> {\n  const { constraints = {} } = config;\n  const { python } = constraints;\n\n  if (python) {\n    logger.debug(`Using python constraint ${python} from config`);\n    return python;\n  }\n\n  // Try Pipfile first because it may have had its Python version updated\n  try {\n    const pipfile = parseToml(pipfileContent) as any;\n    const pythonFullVersion = pipfile.requires.python_full_version;\n    if (pythonFullVersion) {\n      logger.debug(\n        `Using python full version ${pythonFullVersion} from Pipfile`,\n      );\n      return `== ${pythonFullVersion}`;\n    }\n    const pythonVersion = pipfile.requires.python_version;\n    if (pythonVersion) {\n      logger.debug(`Using python version ${pythonVersion} from Pipfile`);\n      return `== ${pythonVersion}.*`;\n    }\n  } catch (err) {\n    logger.warn({ err }, 'Error parsing Pipfile');\n  }\n\n  // Try Pipfile.lock next\n  try {\n    const result = PipfileLockSchema.safeParse(existingLockFileContent);\n    // istanbul ignore if: not easily testable\n    if (!result.success) {\n      logger.warn({ err: result.error }, 'Invalid Pipfile.lock');\n      return undefined;\n    }\n    // Exact python version has been included since 2022.10.9. It is more specific than the major.minor version\n    // https://github.com/pypa/pipenv/blob/main/CHANGELOG.md#2022109-2022-10-09\n    const pythonFullVersion = result.data._meta?.requires?.python_full_version;\n    if (pythonFullVersion) {\n      logger.debug(\n        `Using python full version ${pythonFullVersion} from Pipfile.lock`,\n      );\n      return `== ${pythonFullVersion}`;\n    }\n    // Before 2022.10.9, only the major.minor version was included\n    const pythonVersion = result.data._meta?.requires?.python_version;\n    if (pythonVersion) {\n      logger.debug(`Using python version ${pythonVersion} from Pipfile.lock`);\n      return `== ${pythonVersion}.*`;\n    }\n  } catch (err) {\n    // Do nothing\n  }\n\n  // Try looking for the contents of .python-version\n  const pythonVersionFileName = getSiblingFileName(\n    pipfileName,\n    '.python-version',\n  );\n  try {\n    const pythonVersion = await readLocalFile(pythonVersionFileName, 'utf8');\n    let pythonVersionConstraint;\n    if (pythonVersion && pep440.isVersion(pythonVersion)) {\n      if (pythonVersion.split('.').length >= 3) {\n        pythonVersionConstraint = `== ${pythonVersion}`;\n      } else {\n        pythonVersionConstraint = `== ${pythonVersion}.*`;\n      }\n    }\n    if (pythonVersionConstraint) {\n      logger.debug(\n        `Using python version ${pythonVersionConstraint} from ${pythonVersionFileName}`,\n      );\n      return pythonVersionConstraint;\n    }\n  } catch (err) {\n    // Do nothing\n  }\n\n  return undefined;\n}\n\nexport function getPipenvConstraint(\n  existingLockFileContent: string,\n  config: UpdateArtifactsConfig,\n): string {\n  const { constraints = {} } = config;\n  const { pipenv } = constraints;\n\n  if (pipenv) {\n    logger.debug('Using pipenv constraint from config');\n    return pipenv;\n  }\n  try {\n    const result = PipfileLockSchema.safeParse(existingLockFileContent);\n    // istanbul ignore if: not easily testable\n    if (!result.success) {\n      logger.warn({ error: result.error }, 'Invalid Pipfile.lock');\n      return '';\n    }\n    if (result.data.default?.pipenv?.version) {\n      return result.data.default.pipenv.version;\n    }\n    if (result.data.develop?.pipenv?.version) {\n      return result.data.develop.pipenv.version;\n    }\n    // Exact python version has been included since 2022.10.9\n    const pythonFullVersion = result.data._meta?.requires?.python_full_version;\n    if (is.string(pythonFullVersion) && semver.valid(pythonFullVersion)) {\n      // python_full_version was added after 3.6 was already deprecated, so it should be impossible to have a 3.6 version\n      // https://github.com/pypa/pipenv/blob/main/CHANGELOG.md#2022109-2022-10-09\n      if (semver.satisfies(pythonFullVersion, '3.7.*')) {\n        // Python 3.7 support was dropped in pipenv 2023.10.20\n        // https://github.com/pypa/pipenv/blob/main/CHANGELOG.md#20231020-2023-10-20\n        return '< 2023.10.20';\n      }\n      // Future deprecations will go here\n    }\n    // Before 2022.10.9, only the major.minor version was included\n    const pythonVersion = result.data._meta?.requires?.python_version;\n    if (pythonVersion) {\n      if (pythonVersion === '3.6') {\n        // Python 3.6 was deprecated in 2022.4.20\n        // https://github.com/pypa/pipenv/blob/main/CHANGELOG.md#2022420-2022-04-20\n        return '< 2022.4.20';\n      }\n      if (pythonVersion === '3.7') {\n        // Python 3.7 was deprecated in 2023.10.20 but we shouldn't reach here unless we are < 2022.10.9\n        // https://github.com/pypa/pipenv/blob/main/CHANGELOG.md#20231020-2023-10-20\n        return '< 2022.10.9';\n      }\n    }\n  } catch (err) {\n    // Do nothing\n  }\n  return '';\n}\n\nexport function getMatchingHostRule(url: string): HostRule | null {\n  const parsedUrl = parseUrl(url);\n  if (parsedUrl) {\n    parsedUrl.username = '';\n    parsedUrl.password = '';\n    const urlWithoutCredentials = parsedUrl.toString();\n\n    return find({ hostType: PypiDatasource.id, url: urlWithoutCredentials });\n  }\n  return null;\n}\n\nasync function findPipfileSourceUrlsWithCredentials(\n  pipfileContent: string,\n  pipfileName: string,\n): Promise<URL[]> {\n  const pipfile = await extractPackageFile(pipfileContent, pipfileName);\n\n  return (\n    pipfile?.registryUrls\n      ?.map(parseUrl)\n      .filter(is.urlInstance)\n      .filter((url) => is.nonEmptyStringAndNotWhitespace(url.username)) ?? []\n  );\n}\n\n/**\n * This will extract the actual variable name from an environment-placeholder:\n * ${USERNAME:-defaultvalue} will yield 'USERNAME'\n */\nexport function extractEnvironmentVariableName(\n  credential: string,\n): string | null {\n  const match = regEx('([a-z0-9_]+)', 'i').exec(decodeURI(credential));\n  return match?.length ? match[0] : null;\n}\n\nexport function addExtraEnvVariable(\n  extraEnv: ExtraEnv<unknown>,\n  environmentVariableName: string,\n  environmentValue: string,\n): void {\n  logger.trace(\n    `Adding ${environmentVariableName} environment variable for pipenv`,\n  );\n  if (\n    extraEnv[environmentVariableName] &&\n    extraEnv[environmentVariableName] !== environmentValue\n  ) {\n    logger.warn(\n      `Possible misconfiguration, ${environmentVariableName} is already set to a different value`,\n    );\n  }\n  extraEnv[environmentVariableName] = environmentValue;\n}\n\n/**\n * Pipenv allows configuring source-urls for remote repositories with placeholders for credentials, i.e. http://$USER:$PASS@myprivate.repo\n * if a matching host rule exists for that repository, we need to set the corresponding variables.\n * Simply substituting them in the URL is not an option as it would impact the hash for the resulting Pipfile.lock\n *\n */\nasync function addCredentialsForSourceUrls(\n  newPipfileContent: string,\n  pipfileName: string,\n  extraEnv: ExtraEnv<unknown>,\n): Promise<void> {\n  const sourceUrls = await findPipfileSourceUrlsWithCredentials(\n    newPipfileContent,\n    pipfileName,\n  );\n  for (const parsedSourceUrl of sourceUrls) {\n    logger.trace(`Trying to add credentials for ${parsedSourceUrl.toString()}`);\n    const matchingHostRule = getMatchingHostRule(parsedSourceUrl.toString());\n    if (matchingHostRule) {\n      const usernameVariableName = extractEnvironmentVariableName(\n        parsedSourceUrl.username,\n      );\n      if (matchingHostRule.username && usernameVariableName) {\n        addExtraEnvVariable(\n          extraEnv,\n          usernameVariableName,\n          matchingHostRule.username,\n        );\n      }\n      const passwordVariableName = extractEnvironmentVariableName(\n        parsedSourceUrl.password,\n      );\n      if (matchingHostRule.password && passwordVariableName) {\n        addExtraEnvVariable(\n          extraEnv,\n          passwordVariableName,\n          matchingHostRule.password,\n        );\n      }\n    }\n  }\n}\n\nexport async function updateArtifacts({\n  packageFileName: pipfileName,\n  newPackageFileContent: newPipfileContent,\n  config,\n}: UpdateArtifact): Promise<UpdateArtifactsResult[] | null> {\n  logger.debug(`pipenv.updateArtifacts(${pipfileName})`);\n\n  const lockFileName = pipfileName + '.lock';\n  const existingLockFileContent = await readLocalFile(lockFileName, 'utf8');\n  if (!existingLockFileContent) {\n    logger.debug('No Pipfile.lock found');\n    return null;\n  }\n  try {\n    await writeLocalFile(pipfileName, newPipfileContent);\n    if (config.isLockFileMaintenance) {\n      await deleteLocalFile(lockFileName);\n    }\n    const cmd = 'pipenv lock';\n    const tagConstraint = await getPythonConstraint(\n      pipfileName,\n      newPipfileContent,\n      existingLockFileContent,\n      config,\n    );\n    const pipenvConstraint = getPipenvConstraint(\n      existingLockFileContent,\n      config,\n    );\n    const extraEnv: Opt<ExtraEnv> = {\n      PIPENV_CACHE_DIR: await ensureCacheDir('pipenv'),\n      PIP_CACHE_DIR: await ensureCacheDir('pip'),\n      WORKON_HOME: await ensureCacheDir('virtualenvs'),\n    };\n    const execOptions: ExecOptions = {\n      cwdFile: pipfileName,\n      docker: {},\n      userConfiguredEnv: config.env,\n      toolConstraints: [\n        {\n          toolName: 'python',\n          constraint: tagConstraint,\n        },\n        {\n          toolName: 'pipenv',\n          constraint: pipenvConstraint,\n        },\n      ],\n    };\n    await addCredentialsForSourceUrls(newPipfileContent, pipfileName, extraEnv);\n    execOptions.extraEnv = extraEnv;\n\n    logger.trace({ cmd }, 'pipenv lock command');\n    await exec(cmd, execOptions);\n    const status = await getRepoStatus();\n    if (!status?.modified.includes(lockFileName)) {\n      return null;\n    }\n    logger.debug('Returning updated Pipfile.lock');\n    return [\n      {\n        file: {\n          type: 'addition',\n          path: lockFileName,\n          contents: await readLocalFile(lockFileName, 'utf8'),\n        },\n      },\n    ];\n  } catch (err) {\n    // istanbul ignore if\n    if (err.message === TEMPORARY_ERROR) {\n      throw err;\n    }\n    logger.debug({ err }, 'Failed to update Pipfile.lock');\n    return [\n      {\n        artifactError: {\n          lockFile: lockFileName,\n          stderr: err.message,\n        },\n      },\n    ];\n  }\n}\n"]}