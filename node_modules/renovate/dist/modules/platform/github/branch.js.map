{"version":3,"file":"branch.js","sourceRoot":"","sources":["../../../../lib/modules/platform/github/branch.ts"],"names":[],"mappings":";;;AAAA,6CAA+C;AAC/C,iDAA8C;AAC9C,qCAAqC;AAErC,SAAS,OAAO,CAAC,IAAY,EAAE,UAAkB;IAC/C,OAAO,eAAM,CAAC,IAAI,CAChB,kBAAS,CAAC,QAAQ,CAAC,UAAU,IAAI,mBAAmB,UAAU,EAAE,EAAE;QAChE,QAAQ,EAAE,KAAK;KAChB,CAAC,CACH;SACE,SAAS,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC;SACrB,KAAK,CAAC,CAAC,GAAG,EAAE,EAAE;QACb,IAAI,GAAG,YAAY,gBAAS,IAAI,GAAG,CAAC,QAAQ,EAAE,UAAU,KAAK,GAAG,EAAE,CAAC;YACjE,OAAO,eAAM,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;QAC1B,CAAC;QAED,OAAO,eAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IACzB,CAAC,CAAC;SACD,aAAa,EAAE,CAAC;AACrB,CAAC;AAEM,KAAK,UAAU,kBAAkB,CACtC,IAAY,EACZ,UAAkB;IAElB,MAAM,SAAS,GAAG,GAAG,UAAU,GAAG,CAAC;IACnC,MAAM,QAAQ,GAAG,MAAM,OAAO,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;IAChD,IAAI,QAAQ,EAAE,CAAC;QACb,MAAM,OAAO,GAAG,8BAA8B,UAAU,wCAAwC,CAAC;QACjG,MAAM,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC;IAC3B,CAAC;IAED,OAAO,OAAO,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;AACnC,CAAC;AAZD,gDAYC","sourcesContent":["import { HttpError } from '../../../util/http';\nimport { Result } from '../../../util/result';\nimport { githubApi } from './common';\n\nfunction headRef(repo: string, branchName: string): Promise<boolean> {\n  return Result.wrap(\n    githubApi.headJson(`/repos/${repo}/git/refs/heads/${branchName}`, {\n      memCache: false,\n    }),\n  )\n    .transform(() => true)\n    .catch((err) => {\n      if (err instanceof HttpError && err.response?.statusCode === 404) {\n        return Result.ok(false);\n      }\n\n      return Result.err(err);\n    })\n    .unwrapOrThrow();\n}\n\nexport async function remoteBranchExists(\n  repo: string,\n  branchName: string,\n): Promise<boolean> {\n  const refNested = `${branchName}/`;\n  const isNested = await headRef(repo, refNested);\n  if (isNested) {\n    const message = `Trying to create a branch '${branchName}' while it's the part of nested branch`;\n    throw new Error(message);\n  }\n\n  return headRef(repo, branchName);\n}\n"]}