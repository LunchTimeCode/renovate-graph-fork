{"version":3,"file":"util.js","sourceRoot":"","sources":["../../../lib/modules/datasource/util.ts"],"names":[],"mappings":";;;;AAAA,kEAAkC;AAClC,6DAAiD;AACjD,yCAAsC;AAEtC,kDAA6D;AAE7D,MAAM,4BAA4B,GAAG,iBAAiB,CAAC;AAEvD,SAAgB,mBAAmB,CACjC,GAAgC;IAEhC,OAAO,YAAE,CAAC,MAAM,CAAC,GAAG,EAAE,OAAO,CAAC,4BAA4B,CAAC,CAAC,CAAC;AAC/D,CAAC;AAJD,kDAIC;AAEM,KAAK,UAAU,kBAAkB;IACtC,IAAI,CAAC;QACH,MAAM,UAAU,GAAe,IAAI,gCAAU,CAAC;YAC5C,MAAM,EAAE,gDAAgD;SACzD,CAAC,CAAC;QACH,MAAM,WAAW,GAAG,MAAM,UAAU,CAAC,cAAc,EAAE,CAAC;QACtD,IAAI,WAAW,EAAE,CAAC;YAChB,iBAAiB;YACjB,IAAA,iCAAsB,EAAC,WAAW,CAAC,CAAC;YACpC,OAAO,MAAM,CAAC,IAAI,CAAC,qBAAqB,WAAW,EAAE,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;QAC5E,CAAC;aAAM,CAAC;YACN,eAAM,CAAC,IAAI,CACT,0EAA0E,CAC3E,CAAC;QACJ,CAAC;IACH,CAAC;IAAC,OAAO,GAAG,EAAE,CAAC;QACb,IAAI,GAAG,CAAC,OAAO,EAAE,QAAQ,CAAC,wCAAwC,CAAC,EAAE,CAAC;YACpE,OAAO,IAAI,CAAC;QACd,CAAC;aAAM,CAAC;YACN,MAAM,GAAG,CAAC;QACZ,CAAC;IACH,CAAC;IACD,OAAO,IAAI,CAAC;AACd,CAAC;AAvBD,gDAuBC","sourcesContent":["import is from '@sindresorhus/is';\nimport { GoogleAuth } from 'google-auth-library';\nimport { logger } from '../../logger';\nimport type { HttpResponse } from '../../util/http/types';\nimport { addSecretForSanitizing } from '../../util/sanitize';\n\nconst JFROG_ARTIFACTORY_RES_HEADER = 'x-jfrog-version';\n\nexport function isArtifactoryServer<T = unknown>(\n  res: HttpResponse<T> | undefined,\n): boolean {\n  return is.string(res?.headers[JFROG_ARTIFACTORY_RES_HEADER]);\n}\n\nexport async function getGoogleAuthToken(): Promise<string | null> {\n  try {\n    const googleAuth: GoogleAuth = new GoogleAuth({\n      scopes: 'https://www.googleapis.com/auth/cloud-platform',\n    });\n    const accessToken = await googleAuth.getAccessToken();\n    if (accessToken) {\n      // sanitize token\n      addSecretForSanitizing(accessToken);\n      return Buffer.from(`oauth2accesstoken:${accessToken}`).toString('base64');\n    } else {\n      logger.warn(\n        'Could not retrieve access token using google-auth-library getAccessToken',\n      );\n    }\n  } catch (err) {\n    if (err.message?.includes('Could not load the default credentials')) {\n      return null;\n    } else {\n      throw err;\n    }\n  }\n  return null;\n}\n"]}