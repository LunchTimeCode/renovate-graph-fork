{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../lib/workers/repository/config-migration/index.ts"],"names":[],"mappings":";;;AACA,4CAAyC;AACzC,qCAAsD;AACtD,0DAA6D;AAC7D,6BAA+C;AAExC,KAAK,UAAU,eAAe,CACnC,MAAsB,EACtB,UAAoB;IAEpB,IAAI,MAAM,CAAC,eAAe,EAAE,CAAC;QAC3B,IAAI,MAAM,CAAC,IAAI,KAAK,QAAQ,EAAE,CAAC;YAC7B,eAAM,CAAC,KAAK,CACV,6EAA6E,CAC9E,CAAC;YACF,OAAO;QACT,CAAC;QACD,MAAM,kBAAkB,GAAG,MAAM,mCAAmB,CAAC,QAAQ,EAAE,CAAC;QAChE,MAAM,eAAe,GAAG,MAAM,IAAA,mCAA0B,EACtD,MAAM,EACN,kBAAkB,CACnB,CAAC,CAAC,+BAA+B;QAClC,IAAI,eAAe,EAAE,CAAC;YACpB,UAAU,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;YACjC,MAAM,IAAA,4BAAuB,EAAC,MAAM,EAAE,kBAAmB,CAAC,CAAC;QAC7D,CAAC;QACD,mCAAmB,CAAC,KAAK,EAAE,CAAC;IAC9B,CAAC;AACH,CAAC;AAtBD,0CAsBC","sourcesContent":["import type { RenovateConfig } from '../../../config/types';\nimport { logger } from '../../../logger';\nimport { checkConfigMigrationBranch } from './branch';\nimport { MigratedDataFactory } from './branch/migrated-data';\nimport { ensureConfigMigrationPr } from './pr';\n\nexport async function configMigration(\n  config: RenovateConfig,\n  branchList: string[],\n): Promise<void> {\n  if (config.configMigration) {\n    if (config.mode === 'silent') {\n      logger.debug(\n        'Config migration issues are not created, updated or closed when mode=silent',\n      );\n      return;\n    }\n    const migratedConfigData = await MigratedDataFactory.getAsync();\n    const migrationBranch = await checkConfigMigrationBranch(\n      config,\n      migratedConfigData,\n    ); // null if migration not needed\n    if (migrationBranch) {\n      branchList.push(migrationBranch);\n      await ensureConfigMigrationPr(config, migratedConfigData!);\n    }\n    MigratedDataFactory.reset();\n  }\n}\n"]}