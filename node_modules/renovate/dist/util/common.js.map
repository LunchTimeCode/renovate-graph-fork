{"version":3,"file":"common.js","sourceRoot":"","sources":["../../lib/util/common.ts"],"names":[],"mappings":"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","sourcesContent":["import JSON5 from 'json5';\nimport {\n  BITBUCKET_API_USING_HOST_TYPES,\n  BITBUCKET_SERVER_API_USING_HOST_TYPES,\n  GITEA_API_USING_HOST_TYPES,\n  GITHUB_API_USING_HOST_TYPES,\n  GITLAB_API_USING_HOST_TYPES,\n} from '../constants';\nimport { logger } from '../logger';\nimport * as hostRules from './host-rules';\nimport { parseUrl } from './url';\n\n/**\n * Tries to detect the `platform` from a url.\n *\n * @param url the url to detect `platform` from\n * @returns matched `platform` if found, otherwise `null`\n */\nexport function detectPlatform(\n  url: string,\n):\n  | 'azure'\n  | 'bitbucket'\n  | 'bitbucket-server'\n  | 'gitea'\n  | 'github'\n  | 'gitlab'\n  | null {\n  const { hostname } = parseUrl(url) ?? {};\n  if (hostname === 'dev.azure.com' || hostname?.endsWith('.visualstudio.com')) {\n    return 'azure';\n  }\n  if (hostname === 'bitbucket.org' || hostname === 'bitbucket.com') {\n    return 'bitbucket';\n  }\n  if (hostname?.includes('bitbucket')) {\n    return 'bitbucket-server';\n  }\n  if (\n    hostname &&\n    (['gitea.com', 'codeberg.org'].includes(hostname) ||\n      hostname.includes('gitea') ||\n      hostname.includes('forgejo'))\n  ) {\n    return 'gitea';\n  }\n  if (hostname === 'github.com' || hostname?.includes('github')) {\n    return 'github';\n  }\n  if (hostname === 'gitlab.com' || hostname?.includes('gitlab')) {\n    return 'gitlab';\n  }\n\n  const hostType = hostRules.hostType({ url });\n\n  if (!hostType) {\n    return null;\n  }\n\n  if (BITBUCKET_SERVER_API_USING_HOST_TYPES.includes(hostType)) {\n    return 'bitbucket-server';\n  }\n  if (BITBUCKET_API_USING_HOST_TYPES.includes(hostType)) {\n    return 'bitbucket';\n  }\n  if (GITEA_API_USING_HOST_TYPES.includes(hostType)) {\n    return 'gitea';\n  }\n  if (GITHUB_API_USING_HOST_TYPES.includes(hostType)) {\n    return 'github';\n  }\n  if (GITLAB_API_USING_HOST_TYPES.includes(hostType)) {\n    return 'gitlab';\n  }\n\n  return null;\n}\n\nexport function noLeadingAtSymbol(input: string): string {\n  return input.startsWith('@') ? input.slice(1) : input;\n}\n\nexport function parseJson(content: string | null, filename: string): unknown {\n  if (!content) {\n    return null;\n  }\n\n  return filename.endsWith('.json5')\n    ? JSON5.parse(content)\n    : parseJsonWithFallback(content, filename);\n}\n\nexport function parseJsonWithFallback(\n  content: string,\n  context: string,\n): unknown {\n  let parsedJson: unknown;\n\n  try {\n    parsedJson = JSON.parse(content);\n  } catch (err) {\n    parsedJson = JSON5.parse(content);\n    logger.warn(\n      { context },\n      'File contents are invalid JSON but parse using JSON5. Support for this will be removed in a future release so please change to a support .json5 file name or ensure correct JSON syntax.',\n    );\n  }\n\n  return parsedJson;\n}\n"]}