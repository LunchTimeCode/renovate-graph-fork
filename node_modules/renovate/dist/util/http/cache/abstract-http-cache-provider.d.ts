import type { GotOptions, HttpResponse } from '../types';
import type { HttpCache, HttpCacheProvider } from './types';
export declare abstract class AbstractHttpCacheProvider implements HttpCacheProvider {
    protected abstract load(url: string): Promise<unknown>;
    protected abstract persist(url: string, data: HttpCache): Promise<void>;
    get(url: string): Promise<HttpCache | null>;
    setCacheHeaders<T extends Pick<GotOptions, 'headers'>>(url: string, opts: T): Promise<void>;
    wrapResponse<T>(url: string, resp: HttpResponse<T>): Promise<HttpResponse<T>>;
}
