import { DumpOptions, LoadOptions } from 'js-yaml';
import type { ZodType } from 'zod';
interface YamlOptions<ResT = unknown, Schema extends ZodType<ResT> = ZodType<ResT>> extends LoadOptions {
    customSchema?: Schema;
    removeTemplates?: boolean;
}
interface YamlOptionsMultiple<ResT = unknown, Schema extends ZodType<ResT> = ZodType<ResT>> extends YamlOptions<ResT, Schema> {
    failureBehaviour?: 'throw' | 'filter';
}
export declare function parseYaml<ResT = unknown>(content: string, iterator?: null | undefined, options?: YamlOptionsMultiple<ResT>): ResT[];
export declare function parseSingleYaml<ResT = unknown>(content: string, options?: YamlOptions<ResT>): ResT;
export declare function dump(obj: any, opts?: DumpOptions | undefined): string;
export {};
