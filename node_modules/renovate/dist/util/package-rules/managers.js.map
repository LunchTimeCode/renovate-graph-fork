{"version":3,"file":"managers.js","sourceRoot":"","sources":["../../../lib/util/package-rules/managers.ts"],"names":[],"mappings":";;;;AAAA,kEAAkC;AAElC,yDAA+D;AAC/D,iCAAiC;AAEjC,MAAa,eAAgB,SAAQ,cAAO;IACjC,OAAO,CACd,EAAE,OAAO,EAA0B,EACnC,EAAE,aAAa,EAAe;QAE9B,IAAI,YAAE,CAAC,SAAS,CAAC,aAAa,CAAC,EAAE,CAAC;YAChC,OAAO,IAAI,CAAC;QACd,CAAC;QACD,IAAI,YAAE,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;YACtC,OAAO,KAAK,CAAC;QACf,CAAC;QACD,IAAI,IAAA,wBAAe,EAAC,OAAO,CAAC,EAAE,CAAC;YAC7B,OAAO,aAAa,CAAC,QAAQ,CAAC,UAAU,OAAO,EAAE,CAAC,CAAC;QACrD,CAAC;QACD,OAAO,aAAa,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;IACzC,CAAC;CACF;AAhBD,0CAgBC","sourcesContent":["import is from '@sindresorhus/is';\nimport type { PackageRule, PackageRuleInputConfig } from '../../config/types';\nimport { isCustomManager } from '../../modules/manager/custom';\nimport { Matcher } from './base';\n\nexport class ManagersMatcher extends Matcher {\n  override matches(\n    { manager }: PackageRuleInputConfig,\n    { matchManagers }: PackageRule,\n  ): boolean | null {\n    if (is.undefined(matchManagers)) {\n      return null;\n    }\n    if (is.undefined(manager) || !manager) {\n      return false;\n    }\n    if (isCustomManager(manager)) {\n      return matchManagers.includes(`custom.${manager}`);\n    }\n    return matchManagers.includes(manager);\n  }\n}\n"]}