{"version":3,"file":"package-patterns.js","sourceRoot":"","sources":["../../../lib/util/package-rules/package-patterns.ts"],"names":[],"mappings":";;;;AAAA,kEAAkC;AAElC,yCAAsC;AACtC,oCAAiC;AACjC,iCAAiC;AACjC,mCAAyC;AAEzC,SAAS,wBAAwB,CAC/B,oBAA8B,EAC9B,IAAY;IAEZ,IAAI,OAAO,GAAG,KAAK,CAAC;IACpB,KAAK,MAAM,cAAc,IAAI,oBAAoB,EAAE,CAAC;QAClD,IAAI,qBAAqB,CAAC,cAAc,EAAE,IAAI,CAAC,EAAE,CAAC;YAChD,OAAO,GAAG,IAAI,CAAC;QACjB,CAAC;IACH,CAAC;IACD,OAAO,OAAO,CAAC;AACjB,CAAC;AAED,MAAa,sBAAuB,SAAQ,cAAO;IACxC,OAAO,CACd,EAAE,OAAO,EAAE,WAAW,EAA0B,EAChD,WAAwB;QAExB,MAAM,EAAE,oBAAoB,EAAE,GAAG,WAAW,CAAC;QAC7C,IAAI,YAAE,CAAC,SAAS,CAAC,oBAAoB,CAAC,EAAE,CAAC;YACvC,OAAO,IAAI,CAAC;QACd,CAAC;QAED,IAAI,YAAE,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,CAAC;YAC1B,OAAO,KAAK,CAAC;QACf,CAAC;QAED,IACE,YAAE,CAAC,MAAM,CAAC,WAAW,CAAC;YACtB,wBAAwB,CAAC,oBAAoB,EAAE,WAAW,CAAC,EAC3D,CAAC;YACD,OAAO,IAAI,CAAC;QACd,CAAC;QACD,IAAI,wBAAwB,CAAC,oBAAoB,EAAE,OAAO,CAAC,EAAE,CAAC;YAC5D,eAAM,CAAC,IAAI,CAAC,IAAI,CACd,EAAE,WAAW,EAAE,WAAW,EAAE,OAAO,EAAE,EACrC,sDAAsD,CACvD,CAAC;YACF,OAAO,IAAI,CAAC;QACd,CAAC;QAED,OAAO,KAAK,CAAC;IACf,CAAC;IAEQ,QAAQ,CACf,EAAE,OAAO,EAAE,WAAW,EAA0B,EAChD,WAAwB;QAExB,MAAM,EAAE,sBAAsB,EAAE,GAAG,WAAW,CAAC;QAC/C,yDAAyD;QACzD,IAAI,YAAE,CAAC,SAAS,CAAC,sBAAsB,CAAC,EAAE,CAAC;YACzC,OAAO,IAAI,CAAC;QACd,CAAC;QACD,IAAI,YAAE,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,CAAC;YAC1B,OAAO,KAAK,CAAC;QACf,CAAC;QAED,IACE,YAAE,CAAC,MAAM,CAAC,WAAW,CAAC;YACtB,wBAAwB,CAAC,sBAAsB,EAAE,WAAW,CAAC,EAC7D,CAAC;YACD,OAAO,IAAI,CAAC;QACd,CAAC;QAED,IAAI,wBAAwB,CAAC,sBAAsB,EAAE,OAAO,CAAC,EAAE,CAAC;YAC9D,eAAM,CAAC,IAAI,CAAC,IAAI,CACd,EAAE,WAAW,EAAE,WAAW,EAAE,OAAO,EAAE,EACrC,0DAA0D,CAC3D,CAAC;YACF,OAAO,IAAI,CAAC;QACd,CAAC;QAED,OAAO,KAAK,CAAC;IACf,CAAC;CACF;AA7DD,wDA6DC;AAED,SAAS,qBAAqB,CAAC,UAAkB,EAAE,GAAW;IAC5D,MAAM,EAAE,GAAG,IAAA,aAAK,EAAC,IAAA,sBAAc,EAAC,UAAU,CAAC,CAAC,CAAC;IAC7C,IAAI,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC;QACjB,eAAM,CAAC,KAAK,CAAC,GAAG,GAAG,oBAAoB,MAAM,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QACrD,OAAO,IAAI,CAAC;IACd,CAAC;IACD,OAAO,KAAK,CAAC;AACf,CAAC","sourcesContent":["import is from '@sindresorhus/is';\nimport type { PackageRule, PackageRuleInputConfig } from '../../config/types';\nimport { logger } from '../../logger';\nimport { regEx } from '../regex';\nimport { Matcher } from './base';\nimport { massagePattern } from './utils';\n\nfunction matchPatternsAgainstName(\n  matchPackagePatterns: string[],\n  name: string,\n): boolean {\n  let isMatch = false;\n  for (const packagePattern of matchPackagePatterns) {\n    if (isPackagePatternMatch(packagePattern, name)) {\n      isMatch = true;\n    }\n  }\n  return isMatch;\n}\n\nexport class PackagePatternsMatcher extends Matcher {\n  override matches(\n    { depName, packageName }: PackageRuleInputConfig,\n    packageRule: PackageRule,\n  ): boolean | null {\n    const { matchPackagePatterns } = packageRule;\n    if (is.undefined(matchPackagePatterns)) {\n      return null;\n    }\n\n    if (is.undefined(depName)) {\n      return false;\n    }\n\n    if (\n      is.string(packageName) &&\n      matchPatternsAgainstName(matchPackagePatterns, packageName)\n    ) {\n      return true;\n    }\n    if (matchPatternsAgainstName(matchPackagePatterns, depName)) {\n      logger.once.warn(\n        { packageRule, packageName, depName },\n        'Use matchDepPatterns instead of matchPackagePatterns',\n      );\n      return true;\n    }\n\n    return false;\n  }\n\n  override excludes(\n    { depName, packageName }: PackageRuleInputConfig,\n    packageRule: PackageRule,\n  ): boolean | null {\n    const { excludePackagePatterns } = packageRule;\n    // ignore lockFileMaintenance for backwards compatibility\n    if (is.undefined(excludePackagePatterns)) {\n      return null;\n    }\n    if (is.undefined(depName)) {\n      return false;\n    }\n\n    if (\n      is.string(packageName) &&\n      matchPatternsAgainstName(excludePackagePatterns, packageName)\n    ) {\n      return true;\n    }\n\n    if (matchPatternsAgainstName(excludePackagePatterns, depName)) {\n      logger.once.warn(\n        { packageRule, packageName, depName },\n        'Use excludeDepPatterns instead of excludePackagePatterns',\n      );\n      return true;\n    }\n\n    return false;\n  }\n}\n\nfunction isPackagePatternMatch(pckPattern: string, pck: string): boolean {\n  const re = regEx(massagePattern(pckPattern));\n  if (re.test(pck)) {\n    logger.trace(`${pck} matches against ${String(re)}`);\n    return true;\n  }\n  return false;\n}\n"]}