{"version":3,"file":"decorator.js","sourceRoot":"","sources":["../../../../lib/util/cache/package/decorator.ts"],"names":[],"mappings":"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","sourcesContent":["import is from '@sindresorhus/is';\nimport { DateTime } from 'luxon';\nimport { GlobalConfig } from '../../../config/global';\nimport { logger } from '../../../logger';\nimport { Decorator, decorate } from '../../decorator';\nimport type { DecoratorCachedRecord, PackageCacheNamespace } from './types';\nimport * as packageCache from '.';\n\ntype HashFunction<T extends any[] = any[]> = (...args: T) => string;\ntype NamespaceFunction<T extends any[] = any[]> = (\n  ...args: T\n) => PackageCacheNamespace;\ntype BooleanFunction<T extends any[] = any[]> = (...args: T) => boolean;\n\n/**\n * The cache decorator parameters.\n */\ninterface CacheParameters {\n  /**\n   * The cache namespace\n   * Either a string or a hash function that generates a string\n   */\n  namespace: PackageCacheNamespace | NamespaceFunction;\n\n  /**\n   * The cache key\n   * Either a string or a hash function that generates a string\n   */\n  key: string | HashFunction;\n\n  /**\n   * A function that returns true if a result is cacheable\n   * Used to prevent caching of private, sensitive, results\n   */\n  cacheable?: BooleanFunction;\n\n  /**\n   * The TTL (or expiry) of the key in minutes\n   */\n  ttlMinutes?: number;\n}\n\n/**\n * caches the result of a decorated method.\n */\nexport function cache<T>({\n  namespace,\n  key,\n  cacheable = () => true,\n  ttlMinutes = 30,\n}: CacheParameters): Decorator<T> {\n  return decorate(async ({ args, instance, callback, methodName }) => {\n    if (!cacheable.apply(instance, args)) {\n      return callback();\n    }\n\n    let finalNamespace: PackageCacheNamespace | undefined;\n    if (is.string(namespace)) {\n      finalNamespace = namespace;\n    } else if (is.function_(namespace)) {\n      finalNamespace = namespace.apply(instance, args);\n    }\n\n    let finalKey: string | undefined;\n    if (is.string(key)) {\n      finalKey = key;\n    } else if (is.function_(key)) {\n      finalKey = key.apply(instance, args);\n    }\n\n    // istanbul ignore if\n    if (!finalNamespace || !finalKey) {\n      return callback();\n    }\n\n    finalKey = `cache-decorator:${finalKey}`;\n    const oldRecord = await packageCache.get<DecoratorCachedRecord>(\n      finalNamespace,\n      finalKey,\n    );\n\n    const ttlOverride = getTtlOverride(finalNamespace);\n    const softTtl = ttlOverride ?? ttlMinutes;\n\n    const cacheHardTtlMinutes = GlobalConfig.get(\n      'cacheHardTtlMinutes',\n      7 * 24 * 60,\n    );\n    let hardTtl = softTtl;\n    if (methodName === 'getReleases' || methodName === 'getDigest') {\n      hardTtl = Math.max(softTtl, cacheHardTtlMinutes);\n    }\n\n    let oldData: unknown;\n    if (oldRecord) {\n      const now = DateTime.local();\n      const cachedAt = DateTime.fromISO(oldRecord.cachedAt);\n\n      const softDeadline = cachedAt.plus({ minutes: softTtl });\n      if (now < softDeadline) {\n        return oldRecord.value;\n      }\n\n      const hardDeadline = cachedAt.plus({ minutes: hardTtl });\n      if (now < hardDeadline) {\n        oldData = oldRecord.value;\n      }\n    }\n\n    let newData: unknown;\n    if (oldData) {\n      try {\n        newData = (await callback()) as T | undefined;\n      } catch (err) {\n        logger.debug(\n          { err },\n          'Package cache decorator: callback error, returning old data',\n        );\n        return oldData;\n      }\n    } else {\n      newData = (await callback()) as T | undefined;\n    }\n\n    if (!is.undefined(newData)) {\n      const newRecord: DecoratorCachedRecord = {\n        cachedAt: DateTime.local().toISO(),\n        value: newData,\n      };\n      await packageCache.set(finalNamespace, finalKey, newRecord, hardTtl);\n    }\n\n    return newData;\n  });\n}\n\nexport function getTtlOverride(namespace: string): number | undefined {\n  const ttl: unknown = GlobalConfig.get('cacheTtlOverride', {})[namespace];\n  if (is.number(ttl)) {\n    return ttl;\n  }\n  return undefined;\n}\n"]}